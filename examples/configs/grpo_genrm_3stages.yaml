# GRPO Three-Stage GenRM Configuration
grpo:
  num_prompts_per_step: 64
  num_generations_per_prompt: 8
  max_rollout_turns: 3  # Three stages: Vanilla → Fact-check → Enhanced
  max_num_steps: 1000
  normalize_rewards: true
  use_leave_one_out_baseline: true
  val_period: 5
  val_at_start: True
  max_val_samples: 64
  val_batch_size: 8

loss_fn:
  reference_policy_kl_penalty: 0.02
  ratio_clip_min: 0.2
  ratio_clip_max: 0.2
  ratio_clip_c: null
  use_on_policy_kl_approximation: false
  use_importance_sampling_correction: true
  token_level_loss: true

checkpointing:
  enabled: true
  checkpoint_dir: "results/grpo_genrm_3stages"
  metric_name: "val_reward"
  higher_is_better: true
  keep_top_k: 5
  save_period: 5

policy:
  model_name: "Qwen/Qwen2.5-1.5B"
  tokenizer:
    name: ${policy.model_name}
  train_global_batch_size: 512
  train_micro_batch_size: 1
  generation_batch_size: 8
  logprob_batch_size: 4
  max_total_sequence_length: 16384
  precision: "bfloat16"
  fsdp_offload_enabled: false
  activation_checkpointing_enabled: false

  dtensor_cfg:
    enabled: true
    cpu_offload: false
    sequence_parallel: false
    activation_checkpointing: false
    tensor_parallel_size: 1
    custom_parallel_plan: null

  dynamic_batching:
    enabled: false

  make_sequence_length_divisible_by: ${policy.dtensor_cfg.tensor_parallel_size}
  max_grad_norm: 1.0

  optimizer:
    name: "torch.optim.AdamW"
    kwargs:
      lr: 5.0e-7
      weight_decay: 0.01
      betas: [0.9, 0.999]
      eps: 1e-8
      foreach: false
      fused: false

  scheduler:
    - name: "torch.optim.lr_scheduler.LinearLR"
      kwargs:
        start_factor: 0.1
        end_factor: 1.0
        total_iters: 50
    - name: "torch.optim.lr_scheduler.ConstantLR"
      kwargs:
        factor: 1.0
        total_iters: 10000000000
    - milestones: [50]

  generation:
    backend: "vllm"
    max_new_tokens: ${policy.max_total_sequence_length}
    temperature: 1.0
    top_p: 1.0
    top_k: null
    stop_token_ids: null
    pad_token_id: null
    stop_strings: null
    vllm_cfg:
      async_engine: false
      precision: ${policy.precision}
      tensor_parallel_size: 1
      pipeline_parallel_size: 1
      gpu_memory_utilization: 0.6
      max_model_len: ${policy.max_total_sequence_length}
      load_format: dummy
      skip_tokenizer_init: True
    colocated:
      # true: generation shares training GPUs
      # false: uses dedicated generation resources
      enabled: true
      # only relevant when enabled is false
      resources:
        gpus_per_node: null
        num_nodes: null

data:
  train_data_path: "/home/yizhujiao/datasets/hs3_genrm/train_data.jsonl"
  val_data_path: "/home/yizhujiao/datasets/hs3_genrm/val_data.jsonl"
  max_input_seq_length: ${policy.max_total_sequence_length}
  prompt_file: null
  system_prompt_file: null
  dataset_name: "HelpSteer3-GenRM-3Stage"
  shuffle_seed_for_training: 0  # -1 for not shuffling

env:
  three_stage_genrm:
    format_penalty: -100
    # No additional config needed for three-stage system

logger:
  log_dir: "logs/grpo_genrm_3stages"
  num_val_samples_to_print: 5
  wandb_enabled: true
  tensorboard_enabled: false
  monitor_gpus: false
  wandb:
    project: "nemo_rl_genrm"
    name: "grpo-genrm-3stages"
  tensorboard: {}
  gpu_monitoring:
    collection_interval: 10
    flush_interval: 10

cluster:
  gpus_per_node: 8
  num_nodes: 1