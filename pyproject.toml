[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nemo-rl"
dynamic = [
    "version",
    "readme",
]
description = "Nemo-RL: A Scalable and Efficient Post-Training Library for Models Ranging from 1 GPU to 1000s, and from Tiny to >100B Parameters"
requires-python = ">=3.10"
license = {text = "Apache 2.0"}
dependencies = [
    "torch==2.6.0",
    "colored==2.2.3",
    "ray[default]==2.43.0",
    "transformers>=4.51.0",
    "wandb",
    "numpy",
    "datasets",
    "rich",
    "math-verify",
    "accelerate>=0.26",
    "tensorboard",
    "omegaconf",
    "torchdata",
    "nvidia-ml-py",
    "hydra-core",
]

[tool.setuptools]
packages = ["nemo_rl"]

[tool.setuptools.dynamic]
version = {attr = "nemo_rl.__version__"}  # any module attribute compatible with ast.literal_eval
readme = {file = "README.md", content-type = "text/markdown"}

[project.optional-dependencies]
vllm = [
    "vllm==0.8.5",
]

[dependency-groups]
build = [
    "torch==2.6.0",
    "setuptools",
    "packaging",
    "einops"
]
docs = [
    "sphinx",
    "sphinx-autobuild",  # For live doc serving while editing docs
    "sphinx-autodoc2",  # For documenting Python API
    "sphinx-copybutton",  # Adds a copy button for code blocks
    "myst_parser",  # For our markdown docs
    "nvidia-sphinx-theme",  # Our NVIDIA theme
]
dev = [
    "pre-commit==3.6.0",
    "ruff==0.9.9",
    "mypy",
    "types-PyYAML",
    "types-requests",
]
test = [
    "pytest>=7.0.0",
    "pytest-timeout",
    "pytest-cov",
]


[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
)/
'''

[tool.pytest.ini_options]
addopts = "--durations=15 -s -rA -x"
testpaths = ["tests"]
python_files = "test_*.py"

[tool.coverage.run]
concurrency = ["thread", "multiprocessing"]
omit = ["/tmp/*"]

[tool.coverage.paths]
source = ["nemo_rl/", "/opt/nemo-rl/nemo_rl/"]

[tool.ruff.lint]
# Enable all `pydocstyle` rules, limiting to those that adhere to the
# Google convention via `convention = "google"`, below.
select = ["D", "F"]

# - On top of the Google convention, disable `D417`, which requires
#   documentation for every function parameter.
# - F841: local variable assigned but never used (exluced to favor readability)
# TODO: Remove D10 once we are about to release to get all the docstrings written
ignore = ["D417", "D10", "F841"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# Section to exclude errors for different file types
[tool.ruff.per-file-ignores]
# Ignore all directories named `tests`.
"tests/**" = ["D"]
# Ignore all files that end in `_test.py`.
"*_test.py" = ["D"]
# Ignore F401 (import but unused) in __init__.py
"__init__.py" = ["F401"]

[tool.uv]
# Users may use different link-modes depending on their scenario:
#  --link-mode=hardlink (default on linux; may get warnings about switching to --link-mode copy if uv cache and venv on different file-systems)
#  --link-mode=copy (slower but more reliable; supresses warning)
#  --link-mode=symlink (fastest option when uv cache and venv on different file-system; caveat: venv is brittle since it depends on the environment/container)
#
#link-mode = "symlink"
